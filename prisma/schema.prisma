// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
// datasource db {
//   provider = "sqlite"
//   url      = "file:dev.sqlite"
// }

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  mongoId       String    @id @default(auto()) @map("_id") @db.ObjectId
  id            String    @unique
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Translations {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  shop          String
  resourceType  String
  resourceId    String
  parentId      String?
  field         String
  locale        String
  market        String
  content       String?   @default("")
  translation   String
  updatedAt     DateTime?
  status        String?

  @@unique([shop, resourceId, field, locale, market])
}


model SyncTranslations {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  shop          String
  resourceType  String
  resourceId    String
  status        Int?     @default(0)

  @@unique([shop, resourceType, resourceId])
}

model SyncProcess {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  shop          String
  resourceType  String
  cursor        String?       @default("")
  hasNext       Boolean?      @default(false)

  @@unique([shop, resourceType])
}

model TranslationState {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  shop           String
  resourceId     String
  resourceType   String   // "product", "option", or "option_value"
  parentProductId String? // The product ID this belongs to
  field          String
  locale         String
  market         String
  status         String?
  previousValue  String?

  @@unique([shop, resourceId, field, locale, market])
}
